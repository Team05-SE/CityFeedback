# Schritt 1
# Für SSH Zugriff Key generieren

ssh-keygen -t ed25519 -C "deineemail@adresse.com"

#Enter file in which to save the key (/PFAD/ZU/DEINEM_SSH_ORDNER/.ssh/id_ed25519_github): /User/username/.ssh/id_ed25519_github auf MACOS oder LINUX /home/username/.ssh/id_ed25519_github AUF WINDOWS weiß ich nicht wo

# Nachdem du den Pfad angegegben hast kannst du deinen Key mit einer Passphrase versehen, musst du aber nicht, wenn nicht einfach mit Enter durchklicken

################
# Schritt 2 
# in Github -> auf Profil klicken (oben rechts) -> Settings -> SSH and GPG Keys -> dann den Inhalt von /PFAD/ZU/DEINEM_SSH_ORDNER/.ssh/id_ed25519_github.pub im Feld Authentication Keys hinterlegen 

# So ermittelst du den Inhalt deines Public Keys
# MACOS
cat /User/username/.ssh/id_ed25519_github.pub

# LINUX
cat /home/username/.ssh/id_ed25519_github.pub

################
# Schritt 3 
# vim oder nano oder euer Standard editor

vim ~/.ssh/config

# folgenden Inhalt einfügen
Host github.com
  HostName github.com
  User git
  IdentityFile ~/.ssh/id_ed25519_github
  IdentitiesOnly yes

################
# Schritt 4

# Jetzt das Repo klonen und hinein wecheln
git clone git@github.com:Team05-SE/CityFeedback.git
cd CityFeedback

################
# Schritt 5 
# jetzt kann gearbeitet werden
# füge bspw. eine Datei dazu wie diese Anleitung hier dann

git status 

git add NAME_DER_DATEI

git commit -m "Anleitung für SSH Nuztung hinzugefügt"

# ACHTUNG bitte vorsichtig damit umgehen, es ist besser mit Branches und Pull Requests zu arbeiten und nicht direkt in Main zu pushen
git push origin main

# Um Branches zu erstellen und gleich hinein zu wechseln
git checkout -b feature/Name_des_Branches

# Prüfen in welchem Branch man ist 
git branch

# Branch pushen
git push origin feature/Name_des_Branches

# Jetzt kann über GitHub Webui der Pull Request gemerged werden -> aktuell kann man selber mergen aber idealerweise schauen mehrere darüber (4 Augen Prinzip) bevor gemerged wird
