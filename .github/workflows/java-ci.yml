name: Multi-Stage Java CI

on:
  push:
    branches: [ feature/constantin ]
  pull_request:
    branches: [ feature/constantin ]

jobs:
  # ------------------------------
  # 1️⃣ LINTING
  # ------------------------------
  lint:
    name: Lint with Super Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Super Linter
        uses: super-linter/super-linter@v6
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: ${{ github.ref_name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Aktiviere explizit Java-Linting
          VALIDATE_JAVA: true
          FILTER_REGEX_EXCLUDE: ".*(package-info\\.java|ExampleTest\\.java)"


  # ------------------------------
  # 2️⃣ BUILD JOB
  # ------------------------------
  build:
    name: Build Java source
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Compile Java files
        run: |
          mkdir -p out
          javac -d out $(find src -name "*.java")

      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: compiled-classes
          path: out

  # ------------------------------
  # 3️⃣ TEST JOB
  # ------------------------------
  test:
    name: Run simple tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download compiled classes
        uses: actions/download-artifact@v4
        with:
          name: compiled-classes
          path: out

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Run main program
        run: java -cp out src.Main

      - name: Run ExampleTest
        run: java -cp out src.ExampleTest

  # ------------------------------
  # 4️⃣ DOC JOB
  # ------------------------------
  docs:
    name: Generate JavaDoc
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate documentation
        run: |
          mkdir -p docs
          javadoc -d docs -sourcepath src -subpackages .

      - name: Upload JavaDoc artifact
        uses: actions/upload-artifact@v4
        with:
          name: javadoc
          path: docs

